name: workflow_api_fix
on:
  #pull_request:
  push:
    branches:
      - "bugfix/*"
 
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout_repository
        uses: actions/checkout@v4

      - name: Validar si es nueva API
        id: new_api
        run: |
          echo "1. Validando si es nueva API."
          resu=`git ls-remote origin --quiet v\*`
          if [[ -z "${resu// /}" ]]; then
            echo "TRUE"
          else 
            echo "FALSE"
          fi

      - name: Instalar lib my-openapi-changes
        id: install_openapi_changes
        run: |
          curl -fsSL https://raw.githubusercontent.com/devniel93/my-openapi-changes/main/install.sh | sh

      - name: Obtener nombre de repo
        id: get_repo_name
        run: |
          gitRepoName=`git ls-remote --get-url | xargs basename -s .git`
          echo "::set-output name=GIT_REPO_NAME::$gitRepoName"

      - name: Validar si existen cambios
        id: validate_for_changes
        run: |
          gitRepoName=${{ steps.get_repo_name.outputs.GIT_REPO_NAME }}
          jsonReport=`openapi-changes report --no-color api/$gitRepoName.yaml https://raw.githubusercontent.com/devniel93/poc_openapi_breaking_changes/main/api/$gitRepoName.yaml`
          echo $jsonReport

          validJson=`echo $jsonReport | jq -r '.message'`
          prefix="No changes"
          result=""
          if [[ $validJson == "$prefix"* ]]; then
            result="FALSE"
          else
            result="TRUE"
          fi
          echo "::set-output name=VALIDATE_FOR_CHANGES::$result"

      - name: Validar si hay cambios en endpoints
        id: validate_changes_endpoints
        if: ${{ steps.validate_for_changes.outputs.VALIDATE_FOR_CHANGES == 'TRUE' }}
        run: |
          echo "2.0 validando si hay cambios en paths o endpoints"
          validFix=`echo $jsonReport | jq -r '.reportSummary.paths'`
          echo "2.0: $validFix"
          
          if [[ -z "${validFix// /}" ]] || [[ $validFix == 'null' ]] ; then
            echo "FALSE"
          else
            echo "TRUE"
          fi